{"version":3,"sources":["services/notes.js","components/Note.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["resolveData","data","axios","get","then","notes","id","content","date","important","newObject","post","put","Note","toggleImportance","label","className","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","notesService","map","note","key","find","n","changedNote","catch","error","console","log","setTimeout","filter","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","length","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4PAIMA,EAAc,SAAC,GAAD,SAAGC,MAaR,EAXA,kBAAMC,IAAMC,IAJX,cAIwBC,KAAKJ,GAAaI,MAAK,SAAAC,GAAK,4BAAQA,GAAR,CAAe,CACjFC,GAAI,IACJC,QAAS,mCACTC,KAAM,2BACNC,WAAW,SAOE,EAJA,SAAAC,GAAS,OAAIR,IAAMS,KAXlB,aAWgCD,GAAWN,KAAKJ,IAIjD,EAFA,SAACM,EAAII,GAAL,OAAmBR,IAAMU,IAAN,UAblB,aAakB,YAAwBN,GAAMI,GAAWN,KAAKJ,ICAjEa,EAbF,SAAC,GAA8C,IAA5CN,EAA2C,EAA3CA,QAASE,EAAkC,EAAlCA,UAAWK,EAAuB,EAAvBA,iBAC5BC,EAAK,eAAWN,EAAY,OAAS,GAAhC,aAEX,OACE,wBAAIO,UAAU,QACXT,EACD,4BAAQU,QAASH,GACdC,KCKMG,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAKH,UAAU,SACZG,ICQQC,EAfA,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uGC2ESC,EAhFH,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVrB,EADU,KACHsB,EADG,OAEaD,mBAAS,iBAFtB,mBAEVE,EAFU,KAEDC,EAFC,OAGaH,oBAAS,GAHtB,mBAGVI,EAHU,KAGDC,EAHC,OAIuBL,mBAAS,MAJhC,mBAIVM,EAJU,KAIIC,EAJJ,KAcjBC,qBARa,WACZC,IAEE/B,MAAK,SAAAC,GACLsB,EAAStB,QAII,IA6ChB,OACC,6BACC,qCACA,kBAAC,EAAD,CAAcc,QAASa,IACvB,6BACC,4BAAQf,QAAS,kBAAMc,GAAYD,KAAnC,QACOA,EAAU,YAAc,QAGhC,4BACEzB,EAAM+B,KAhCa,SAAAC,GAAI,OAAKP,IAAaA,GAAWO,EAAK5B,YAAe,kBAAC,EAAD,eAAM6B,IAAKD,EAAK/B,IAAQ+B,EAAxB,CAA8BvB,iBAAkB,kBArBjG,SAAC,GAAY,IAAVR,EAAS,EAATA,GACvB+B,EAAOhC,EAAMkC,MAAK,SAAAC,GAAC,OAAIA,EAAElC,KAAOA,KAChCmC,EAAW,2BAAQJ,GAAR,IAAc5B,WAAY4B,EAAK5B,YAEhD0B,EACS7B,EAAImC,GACXrC,MAAK,SAAAH,GACL0B,EAAStB,EAAM+B,KAAI,SAAAC,GAAI,OAAIA,EAAK/B,KAAOA,EAAK+B,EAAOpC,SAEnDyC,OAAM,SAAAC,GACNC,QAAQC,IAAIF,GACZV,EAAgB,SAAD,OACLI,EAAK9B,QADA,sCAGfuC,YAAW,WACVb,EAAgB,QACd,KACHN,EAAStB,EAAM0C,QAAO,SAAAP,GAAC,OAAIA,EAAElC,KAAOA,SAI2F0C,CAAmBX,WAkCnJ,0BAAMY,SA9BQ,SAACC,GAChBA,EAAMC,iBAEN,IAAMC,EAAa,CAClB9C,GAAID,EAAMA,EAAMgD,OAAS,GAAG/C,GAAK,EACjCC,QAASqB,EACTpB,MAAO,IAAI8C,MAAQC,cACnB9C,UAAW+C,KAAKC,SAAW,IAG5BtB,EACSiB,GACPhD,MAAK,SAAAH,GACL0B,EAAStB,EAAMqD,OAAOzD,IACtB4B,EAAW,SAiBX,2BAAO8B,MAAO/B,EAASgC,SAjCJ,SAAC,GAAD,IAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2B9B,EAAW8B,MAkCzD,4BAAQG,KAAK,UAAb,SAED,kBAAC,EAAD,Q,MC3EHC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7e2c8392.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/notes'\n\nconst resolveData = ({ data }) => data\n\nconst getAll = () => axios.get(baseUrl).then(resolveData).then(notes => [...notes, {\n  id: 10000,\n  content: 'This note is not saved to server',\n  date: '2019-05-30T17:30:31.098Z',\n  important: true,\n}])\n\nconst create = newObject => axios.post(baseUrl, newObject).then(resolveData)\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject).then(resolveData)\n\nexport default { getAll, create, update }\n","import React from 'react'\n\nconst Note = ({ content, important, toggleImportance }) => {\n  const label = `make ${important ? 'not ' : ''}important`\n\n  return (\n    <li className='note'>\n      {content}\n      <button onClick={toggleImportance}>\n        {label}\n      </button>\n    </li>\n  )\n}\n\nexport default Note\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n    </div>\n  )\n}\n\nexport default Footer\n","import React, { useState, useEffect } from 'react'\n\nimport notesService from './services/notes'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\n\nconst App = () => {\n\tconst [notes, setNotes] = useState([])\n\tconst [newNote, setNewNote] = useState('...a new note')\n\tconst [showAll, setShowAll] = useState(true)\n\tconst [errorMessage, setErrorMessage] = useState(null)\n\n\tconst hook = () => {\n\t\tnotesService\n\t\t\t.getAll()\n\t\t\t.then(notes => {\n\t\t\t\tsetNotes(notes)\n\t\t\t})\n\t}\n\n\tuseEffect(hook, [])\n\n\tconst toggleImportanceOf = ({ id }) => {\n\t\tconst note = notes.find(n => n.id === id)\n\t\tconst changedNote = { ...note, important: !note.important }\n\n\t\tnotesService\n\t\t\t.update(id, changedNote)\n\t\t\t.then(data => {\n\t\t\t\tsetNotes(notes.map(note => note.id !== id ? note : data))\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error)\n\t\t\t\tsetErrorMessage(\n\t\t\t\t\t`Note '${note.content}' was already removed from server`\n\t\t\t\t)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetErrorMessage(null)\n\t\t\t\t}, 5000)\n\t\t\t\tsetNotes(notes.filter(n => n.id !== id))\n\t\t\t})\n\t}\n\n\tconst displayContent = note => (showAll || (!showAll && note.important)) && <Note key={note.id} {...note} toggleImportance={() => toggleImportanceOf(note)} />\n\n\tconst updateNewNote = ({ target: { value } }) => setNewNote(value)\n\n\tconst addNote = (event) => {\n\t\tevent.preventDefault()\n\n\t\tconst noteObject = {\n\t\t\tid: notes[notes.length - 1].id + 1,\n\t\t\tcontent: newNote,\n\t\t\tdate: (new Date()).toISOString(),\n\t\t\timportant: Math.random() < 0.5,\n\t\t}\n\n\t\tnotesService\n\t\t\t.create(noteObject)\n\t\t\t.then(data => {\n\t\t\t\tsetNotes(notes.concat(data))\n\t\t\t\tsetNewNote('')\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Notes</h1>\n\t\t\t<Notification message={errorMessage} />\n\t\t\t<div>\n\t\t\t\t<button onClick={() => setShowAll(!showAll)}>\n\t\t\t\t\tshow {showAll ? 'important' : 'all' }\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<ul>\n\t\t\t\t{notes.map(displayContent)}\n\t\t\t</ul>\n\t\t\t<form onSubmit={addNote}>\n\t\t\t\t<input value={newNote} onChange={updateNewNote} />\n\t\t\t\t<button type=\"submit\">save</button>\n\t\t\t</form>\n\t\t\t<Footer />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}